# nginx.conf
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


//이벤트 처리 
//이벤트  요청 처리를 1024개 동시에 처리한다.
events {
    worker_connections  1024;
}

http {
    #공인 ip가 http설정을 하였으므로, include와 default_type 정하기 
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    #오류생겼을때 로그 포맷(설정)
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    #백엔드 파일,프론트엔드 파일 보낼준비, tcp 통신 nono timeout 설정 부분
    sendfile        on;
    tcp_nopush     on;
    tcp_nodelay    on;
    keepalive_timeout  65;
    types_hash_max_size 2048;

    include /etc/nginx/conf.d/*.conf;
    //서버의 응답은 80번 포트 서버의 name은 aws 공인 ip를 이용한다.
    server {
        listen 80;
        server_name 54.180.82.10;

        location / {
            proxy_pass http://frontend:3000;  # 프론트엔드 컨테이너 이름과 포트
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/problems {
            proxy_pass http://backend:5000;  # 백엔드 컨테이너 이름과 포트
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS 헤더 추가
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept';
        }
    }
}
